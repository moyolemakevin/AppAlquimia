INFORME DE AUDITORIA DE CONFIGURACION
Proyecto: Alquimia Esencial – Sustentacion Final
Fecha de emision: 21 de septiembre de 2025
Equipo auditor: Oficina de Gestion de Configuracion de Software (GCS)

RESUMEN EJECUTIVO
Se realizo una auditoria integral al ecosistema Alquimia Esencial con el fin de evaluar el grado de cumplimiento del Plan de Gestion de Configuracion (CMP), la coherencia entre requisitos, versiones y entregables, y la robustez de los controles implementados. La revision abarca la aplicacion hibrida (Angular 20 + Ionic 8), la API PHP 8.2 sobre MariaDB 10.4, los scripts SQL, la documentacion de soporte y la automatizacion CI/CD. El resultado general es satisfactorio: existe trazabilidad entre requerimientos, cambios y releases; las lineas base estan definidas y resguardadas; y las auditorias FCA/PCA confirmaron integridad funcional y fisica. Se identifican oportunidades de mejora en pruebas automatizadas, gestion de secretos y fortalecimiento de la observabilidad.

1. OBJETIVOS, ALCANCE Y METODOLOGIA
1.1 Objetivos especificos
  • Validar el cumplimiento del CMP_v1.0 y sus politicas asociadas.
  • Verificar la identificacion de Items de Configuracion (IC), sus lineas base y el versionado asociado.
  • Evaluar el proceso de control de cambios, contabilidad de estado y ejecucion de auditorias.
  • Confirmar la existencia de trazabilidad requisito ? cambio ? version ? release.
  • Revisar la automatizacion (CI/CD) y la integridad de artefactos entregados.
1.2 Alcance
  • Repositorio GitHub "AppAlquimia" y espejo local.
  • Directorios src/ y api/ del proyecto principal; script "alquimia_esencial (4).sql";
  • Documentos CMP, CSA, CRs, release notes, reportes FCA/PCA, matrices de trazabilidad y presentaciones.
  • Pipelines YAML, configuraciones de Ionic, package.json, composer.json, ionic.config.json.
1.3 Metodologia
  • Revision documental (CMP, actas CCB, CRs, CSA, release notes, QA report, PPT).
  • Inspeccion de repositorio (ramas, tags, PRs, historial de commits, GitHub Actions).
  • Pruebas funcionales orientadas a auditoria (TC-FCA-01..05).
  • Verificacion fisica (hashes, artefactos construidos, scripts SQL, consistencia de carpetas).
  • Entrevistas cortas con roles claves (Configuration Manager, Release Manager, Auditor).

2. PLAN DE GESTION DE CONFIGURACION (CMP)
2.1 Politica y version
  • Documento CMP_v1.0.pdf (2 paginas) ubicado en docs/.
  • Roles definidos: Owner (CM), Release Manager (RM), Auditor de Configuracion (CA), DevOps Engineer, Development Team.
  • Periodicidad de revision: trimestral o ante cambios mayores de proceso.
2.2 Repositorios y herramientas
  • Repositorio principal: GitHub – permisos L3 (Owner), L2 (Maintainers), L1 (Contribuidores).
  • Respaldo: copia diaria en servidor interno (script PowerShell con schedulador de Windows).
  • Issue tracking: GitHub Issues vinculado con CR Log y CSA.
  • Herramientas: Git (CLI), GitHub Desktop, Visual Studio Code, XAMPP, phpMyAdmin, Cypress (planificado), GitHub Actions.
2.3 Politicas de versionado y ramas
  • SemVer adoptado: MAJOR.MINOR.PATCH.
  • Ramas: main (estable), develop (integracion), release/* (pre-produccion), feature/* (desarrollo), hotfix/* (correcciones criticas).
  • Reglas de PR: al menos una revision cruzada, ejecucion de pipeline CI, checklist de evidencia (CR, pruebas, documentacion).
2.4 CCB y control de cambios
  • Comite de Control de Cambios (CCB): Owner, RM, Auditor, representante de QA.
  • Flujo CR: solicitud (CR_####.md) ? analisis impacto ? decision ? implementacion ? cierre.
  • Registro: CR_Log.xlsx con columnas ID, descripcion, solicitante, impacto, decision, fecha, observaciones.

3. IDENTIFICACION DE IC Y LINEAS BASE
3.1 Items de configuracion
  • IC-APP-001: Frontend Angular/Ionic (src/**, assets/**, environment.ts).
  • IC-API-002: Backend PHP/API (api/**, bootstrap.php, helpers).
  • IC-DB-003: Esquemas y scripts SQL (alquimia_esencial (4).sql, migraciones).
  • IC-DOC-004: Documentacion oficial (README, CMP, CSA, CRs, release notes, QA reports, trazabilidad, PPTs).
  • IC-CI-005: Pipelines y configuraciones (GitHub Actions ci.yml, ionic.config.json, package.json, composer.json).
  • IC-ENV-006: Archivos de configuracion de entorno (copia en docs/env/ para referencias controladas).
3.2 Lineas base vigentes
  • BL-1.0 (Sprint 4): commit 84f52c8 – UI renovada, asistente IA mejorado, dataset inicial; etiquetada como v1.0.0.
  • BL-1.0.1 (post-QA): commit 98fd2a1 – correcciones menores y ajustes CORS; tag v1.0.1.
  • BL-1.1 (actual): commit b6d4c7e – CTA de compra, CRUD de imagenes, script SQL actualizado; tag v1.1.0.
  • Documentacion de linea base en docs/LineasBase.xlsx (IC, version, fecha, responsable, resumen).

4. VERSIONADO, RAMAS Y SOLICITUDES DE CAMBIO (PR/CR)
4.1 Evidencias de versionado
  • Commits representativos: 5a8b3b1 (feature CTA compra), 6ef04c2 (soporte imagenes admin), 9c201d7 (refactor chat API), d1a3f09 (script SQL con URLs reales).
  • Nomenclatura: prefijo semantico + descripcion (feat, fix, docs, refactor, chore).
4.2 Ramas inspeccionadas
  • develop (sincronizada con main luego de release v1.1.0).
  • feature/add-whatsapp-cta (mergeada en PR #32).
  • feature/admin-image-field (PR #33).
  • hotfix/cors-bootstrap (PR #29).
4.3 Pull Requests clave
  • PR #30 – Refactor `api/assistant/chat.php`: revisado por Owner y RM, adjunto QA report TC-FCA-04.
  • PR #32 – CTA WhatsApp: incluye evidencia CR-014, capturas UI, resultado de pruebas manuales.
  • PR #33 – CRUD imagen en admin: asegura valor `imagen_url` en formulario y payload.
  • PR #28 – Actualizacion CMP y CSA: valida politicas y roles.
4.4 Change Requests recientes
  • CR-014: "Agregar CTA de compra hacia WhatsApp" – Aprobado (Impacto: UI/UX, Asistente, Documentacion).
  • CR-015: "Gestion de CORS en bootstrap" – Aprobado urgente (Impacto: API, seguridad navegador).
  • CR-016: "Actualizar dataset de aceites con imagenes reales" – Aprobado con condicion de respaldo.
  • CR-017: "Incorporar evidencias CMP y CSA" – Aprobado.

5. ETIQUETAS, RELEASES Y NOTAS
5.1 Tags vigentes
  • v1.0.0 – Baseline tras sprint inicial de auditoria.
  • v1.0.1 – Correcciones rapidas (CORS, placeholders).
  • v1.1.0 – Release posterior a auditoria (CTA, script SQL, chatbot refactor, CRUD imagenes).
5.2 Gestion de releases
  • Cada release incluye: artefacto build (www.zip), script SQL, release notes (cambios, impactos, riesgos, rollback, checksums), evidencias (QA report, CSA snapshot).
  • Plan de rollback documentado: revertir a tag anterior y restaurar backup base de datos.
  • Checksum SHA-256 publicado en release notes y verificado durante PCA.
  • Ejemplo Release Notes v1.1.0: secciones Cambios destacables, Impacto, Riesgos, Rollback, Artefactos, Checksum.

6. CONTROL DE CAMBIOS (CR/CCB)
6.1 Proceso
  • Originacion: Issue GitHub template + CR_####.md en docs/CR/.
  • Evaluacion: analisis de impacto, riesgos, dependencias, esfuerzo.
  • Decision: acta CCB (docs/CCB/Acta_YYYY-MM-DD.pdf) con firma digital y accion asignada.
  • Implementacion: PR vinculado; se exige evidencia (testing, documentacion, actualizacion CSA).
  • Cierre: actualizacion del CR Log y CSA.
6.2 Ejemplo completo (CR-016)
  • Solicitante: Release Manager.
  • Descripcion: "Actualizar dataset de aceites con 10 imagenes reales de Unsplash".
  • Impacto: BD (script SQL), UI (render imagenes), Documentacion (release notes), QA (prueba integracion).
  • Decision: Aprobado, condicion: realizar backup previo.
  • Evidencia: PR #33 (commits d1a3f09, 1f99012), release notes v1.1.0, screenshot en docs/Capturas/aceites.png.

7. CONTABILIDAD DE ESTADO (CSA)
7.1 Registro y estructura
  • Archivo CSA.xlsx con pestañas: Snapshot actual, Historico, Indicadores.
  • Campos: IC, Version, Estado (Planificado/En curso/Aprobado/Rechazado), Responsable, Fecha ultima actualizacion, Ticket/PR asociado.
7.2 Detalle snapshot 21-09-2025
  • IC-APP-ACEITES – v1.1.0 – Aprobado – Dev Team – PR #32.
  • IC-APP-ADMIN – v1.1.0 – Aprobado – Dev Team – PR #33.
  • IC-API-CHATBOT – v1.1.0 – Aprobado – Owner – PR #30.
  • IC-DB-SQL – v1.1.0 – Aprobado – RM – CR-016.
  • IC-DOC-CMP – v1.0.0 – Aprobado – Auditor – Acta CCB 2025-09-19.
7.3 Indicadores clave (Sprint Auditoria)
  • Issues cerrados: 14 (8 features, 3 fixes, 3 docs).
  • Tiempo promedio de ciclo PR: 19 h.
  • % PR con reviewer distinto al autor: 100%.
  • % CR aprobados vs. rechazados: 88% vs. 12%.

8. AUDITORIAS FCA Y PCA
8.1 Auditoria FCA
  • Proposito: confirmar que la linea base BL-1.1 cumple requisitos funcionales prioritarios.
  • Casos ejecutados (TC-FCA-01..05):
        – Login (credenciales admin y usuario) ? OK.
        – Exploracion y filtros de aceites ? OK.
        – Alta y edicion de aceite con imagen (admin) ? OK.
        – Interaccion con asistente IA (consulta "Necesito algo para relajacion") ? OK.
        – Agregar/eliminar favorito ? OK.
  • Evidencia: QA_Report_2025-09-21.md (capturas y observaciones).
  • Hallazgos: ninguno critico; recomendacion de validacion extra de URLs en formulario admin.
8.2 Auditoria PCA
  • Objetivo: comparar artefactos entregados con configuracion documentada.
  • Checklist:
        – Hash SHA-256 de www.zip coincide con release v1.1.0.
        – Script SQL contiene 6 aceites base + 10 nuevos con URLs de Unsplash.
        – CMP, CRs, CSA, Release notes y QA report disponibles en docs/.
        – Bootstrap.php libre de BOM; CORS responde 204 en OPTIONS.
  • Resultado: PCA aprobada; se registro observacion menor (documentar fallback de iconv).

9. AUTOMATIZACION, CI/CD Y CALIDAD
9.1 Pipeline GitHub Actions
  • Archivo .github/workflows/ci.yml.
  • Jobs: setup-node ? install ? lint ? test (placeholder) ? build ? checksum ? upload artifacts ? notify.
  • Estrategia: ejecuta en push a feature/* y PR hacia develop/main.
9.2 Artefactos y controles de integridad
  • Artefactos versionados: www.zip, manifest.json, checksums.txt, CSA snapshot, QA report.
  • Checksum verificable via comando `certutil -hashfile www.zip SHA256` (documentado en release).
9.3 Roadmap CI/CD
  • Activar pruebas unitarias (ng test) y coverage.
  • Integrar PHPUnit para API.
  • Configurar despliegue automatizado a entorno staging (script PowerShell + XAMPP CLI).
  • Integrar SAST (npm audit, sonarcloud) y Lint PHP (phpcs).

10. TRAZABILIDAD END-TO-END
10.1 Matriz de Trazabilidad
  • Archivo docs/Trazabilidad.xlsx, relaciona RQ, issue, CR, commit, PR, release.
10.2 Ejemplo completo (RQ-ACE-012)
  • Requisito: "El usuario debe disponer de un canal directo de compra".
  • Issue #58 "CTA compra en WhatsApp".
  • CR-014 (aprobado por CCB).
  • PR #32 (feature/add-whatsapp-cta) – commits 5a8b3b1, 6ef04c2.
  • Tag v1.1.0 – Release notes (Cambios 1).
10.3 Ejemplo (RQ-IA-004)
  • Requisito: "El asistente debe sugerir aceites pertinentes".
  • Issue #52 "Refactor chat IA".
  • CR-013 aprovado.
  • PR #30 (commits 9c201d7, c8fbd3a).
  • Release v1.1.0 (Cambios 2).
  • Evidencia: Chatlogs registran respuestas alineadas a keywords.

11. DOCUMENTACION Y SOPORTE
11.1 Entregables obligatorios
  • CMP_v1.0.pdf.
  • ReleaseNotes_v1.1.0.md.
  • CR_Log.xlsx y CSA.xlsx.
  • QA_Report_2025-09-21.md.
  • Registro_PCA_FCA_2025-09-20.pdf.
  • Documento integrador (10 pag) y diapositivas PPT/PDF.
11.2 Documentos adicionales
  • README.md (instalacion, configuracion, comandos).
  • docs/Manual_Operativo.md (uso de panel admin y asistente).
  • docs/Plan_Pruebas_FCA.xlsx.
  • docs/Capacitacion_Usuarios.pdf.

12. EVIDENCIA DE PRUEBAS Y VALIDACION
  • Suites manuales manuales (TC-AUTH, TC-ACEITES, TC-FAVORITOS, TC-ASSISTANT, TC-ADMIN) completadas.
  • Scripts SQL verificados con MariaDB 10.4 (import/export, integridad referencial).
  • Requests HTTP via curl/Postman confirmando respuestas `status=success` en endpoints criticos.
  • QA report incluye capturas y checklist de regresion.

13. RIESGOS, OBSERVACIONES Y ACCIONES
13.1 Riesgos identificados
  • Falta de pruebas automatizadas (riesgo medio) ? Plan Q4 2025.
  • Gestion de secretos (riesgo alto) ? Implementar .env y GitHub Secrets.
  • Tokens sin expiracion (riesgo medio) ? Implementar expiracion/refresh.
  • Observabilidad limitada (riesgo medio) ? Integrar Sentry/logging estructurado.
13.2 Observaciones menores
  • Normalizar mensajes en UI para URLs invalidas.
  • Documentar fallback iconv con mas detalle.
  • Considerar paginacion en listados de aceites.
13.3 Acciones aprovadas
  • CR-018 (pendiente) – Integracion pruebas unitarias.
  • CR-019 (pendiente) – Pipeline deploy staging.
  • CR-020 (pendiente) – Implementar expiracion tokens.

14. CONCLUSIONES GENERALES
  • El CMP esta implementado y operacional; roles definidos y responsabilidades claras.
  • Las lineas base, ramas y releases mantienen coherencia y trazabilidad completa.
  • Los mecanismos de control de cambios, CSA y auditorias demuestran madurez en la gestion.
  • La automatizacion CI/CD esta en marcha con pasos concretos para ampliarla.
  • La integridad de entregables fue certificada por la PCA; la funcionalidad esencial se verifico en la FCA.
  • Recomendaciones principales: acelerar adopcion de pruebas automatizadas, fortalecer seguridad (tokens, secretos) y sumar observabilidad.

15. ANEXOS REFERENCIADOS
  • CMP_v1.0.pdf.
  • CR_Log.xlsx.
  • CSA.xlsx.
  • ReleaseNotes_v1.1.0.md.
  • QA_Report_2025-09-21.md.
  • Registro_PCA_FCA_2025-09-20.pdf.
  • Trazabilidad.xlsx.
  • Documentos integrador y diapositivas.
  • Capturas de evidencia (docs/Capturas/*).

FIN DEL INFORME
